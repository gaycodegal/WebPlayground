/**
Copyright (C) 2017 Steph Oro.

Given a starting angle and an ending angle,
 find the shortest circular path to it.
*/
var canvas = document.getElementById("canvas");
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
var ctx = canvas.getContext("2d");
var linew = 10;
ctx.lineWidth = linew;
ctx.lineCap = "round";

function Point(x, y, c) {
    this.x = x;
    this.y = y;
    this.color = c;
}

Point.prototype.set = function (p) {
    this.x = p.x;
    this.y = p.y;
}

Point.prototype.draw = function (ctx) {
    var r = (linew - 4) / 2;
    ctx.save();
    ctx.beginPath();
    if (this.color) {
        ctx.fillStyle = this.color;
    }
    ctx.arc(this.x, this.y, r, 0, 2 * Math.PI);
    ctx.fill();
    ctx.restore();
};

function Line(origin, circ, color) {
    this.o = origin;
    this.c = circ;
    this.color = color || "red";
}

function fixAngle(a) {
    var p2 = Math.PI * 2;
    a = a % p2;
    if (a > Math.PI) {
        a -= p2;
    } else if (a < -Math.PI) {
        a += p2;
    }
    return a;
}

Line.prototype.fixAngle = function () {
    this.c.x = fixAngle(this.c.x);
};

Line.prototype.draw = function (ctx) {
    var cx = this.c.x;
    ctx.save();
    ctx.beginPath();
    if (this.color) {
        ctx.strokeStyle = this.color;
    }
    ctx.moveTo(this.o.x, this.o.y);
    ctx.lineTo(this.o.x + Math.cos(cx) * this.c.y, this.o.y + Math.sin(cx) * this.c.y);
    ctx.stroke();
    ctx.restore();
};

Line.prototype.endPoint = function () {
    var cx = this.c.x;
    return new Point(this.o.x + Math.cos(cx) * this.c.y, this.o.y + Math.sin(cx) * this.c.y, "orange");
};

Line.between = function (p1, p2, color) {
    var dx = p1.x - p2.x;
    var dy = p1.y - p2.y;
    var d = Math.sqrt(dx * dx + dy * dy);
    var c = new Point(Math.atan2(dy, dx) - Math.PI, d);
    return new Line(p1, c, color);
};

function origin() {
    return new Point(window.innerWidth/2,window.innerHeight/2, "yellow");
}

function AngleTween(start, end){
    this.size = 100;
    this.s = start;
    this.e = end;
    this.start = new Line(origin(), new Point(start, this.size), "green");
    this.end = new Line(origin(), new Point(end, this.size), "red");

    this.line = new Line(origin(), new Point(start, this.size), "black");

    this.dx = end - start;
    this.dt = 3000;
    this.ct = 0;
}

AngleTween.prototype.draw = function(ctx){
    [this.start, this.end, this.line].map(x => x.draw(ctx));
};

AngleTween.prototype.step = function(time){
    this.ct += time;
    if(this.ct > this.dt)
	this.ct = this.dt;
    this.line.c.x = this.s + (this.dx * this.ct)/this.dt;
    
};

ctx.clearRect(0, 0, canvas.width, canvas.height);
var ang = new AngleTween(0, -Math.PI/2 + 3*Math.PI);
var s = Date.now();
ang.draw(ctx);
setInterval(function(){
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    var e = Date.now();
    ang.step(e - s);
    ang.draw(ctx);
    s = e;
}, 10);

/*








*/
